{"version":3,"sources":["constant.ts","component/layout/styles.tsx","component/header/styles.tsx","svgs/search-lens/styles.tsx","svgs/search-lens/index.tsx","component/header/index.tsx","component/layout/index.tsx","App.tsx","serviceWorker.ts","component/global-style/index.tsx","index.tsx"],"names":["THEME","CATEGORIES","Layout","styled","div","LayoutContainer","Header","HeaderContainer","MobileContainer","DesktopContainer","Logo","img","MobileTopButtonsContainer","MobileSearchBar","MobileGenderToggle","MobileGenderButton","props","active","SecondRowContainer","MobileCategoryButton","DesktopHeaderLeft","DesktopHeaderRight","DesktopCategoryContainer","DesktopGenderContainer","DesktopGenderButton","DesktopCategoryButton","LoginButton","DesktopSearchBar","DesktopSearchBarMessage","searchLensSVG","svg","SearchLens","focusable","viewBox","d","useState","genderState","setGenderState","categoryState","setCategoryState","toggleButton","toggleCategory","state","src","process","onClick","map","val","idx","children","App","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d25977c9.chunk.js","sourcesContent":["export const BREAKPOINT = 768;\r\n\r\nexport const THEME = {\r\n  MOBILE_HEADER: '#FF6B00',\r\n  DESKTOP_HEADER: 'white',\r\n};\r\n\r\nexport const CATEGORIES = ['SHOP', 'ITEM', 'SALE', 'MORE'];\r\n","import styled from 'styled-components/macro';\r\nimport { BREAKPOINT } from '../../constant';\r\n\r\nexport const Layout = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  min-height: 100%;\r\n`;\r\n\r\nexport const LayoutContainer = styled.div`\r\n  padding-top: 10rem;\r\n\r\n  @media only screen and (min-width: ${BREAKPOINT}px) {\r\n    padding-top: 6rem;\r\n  }\r\n`;\r\n","import styled from 'styled-components/macro';\r\n\r\nimport { BREAKPOINT, THEME } from '../../constant';\r\n\r\ninterface ActiveProps {\r\n  active?: boolean;\r\n}\r\n\r\nexport const Header = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${THEME.MOBILE_HEADER};\r\n  height: 5.5rem;\r\n\r\n  @media only screen and (min-width: ${BREAKPOINT}px) {\r\n    background-color: ${THEME.DESKTOP_HEADER};\r\n    height: 6rem;\r\n  }\r\n`;\r\n\r\nexport const MobileContainer = styled.div`\r\n  width: 100%;\r\n  padding-right: 1.6rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  @media only screen and (min-width: ${BREAKPOINT}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: none;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #e5e5e5;\r\n\r\n  @media only screen and (min-width: ${BREAKPOINT}px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  width: 5.5rem;\r\n  height: auto;\r\n  cursor: pointer;\r\n\r\n  @media only screen and (min-width: ${BREAKPOINT}px) {\r\n    width: 6rem;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nexport const MobileTopButtonsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const MobileCategoriesContainer = styled.div``;\r\n\r\nexport const MobileSearchBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  width: 10rem;\r\n  height: 3rem;\r\n  margin-left: 1.2rem;\r\n\r\n  background-color: white;\r\n  border-radius: 1.5rem;\r\n\r\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.15);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MobileGenderToggle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  height: 3rem;\r\n\r\n  background-color: ${THEME.MOBILE_HEADER};\r\n  border: 1px solid white;\r\n  border-radius: 1.5rem;\r\n`;\r\n\r\nexport const MobileGenderButton = styled.div<ActiveProps>`\r\n  z-index: ${(props) => (props.active ? 100 : 50)};\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  box-shadow: ${(props) => (props.active ? '0 1px 3px rgba(0, 0, 0, 0.4)' : 'none')};\r\n\r\n  font-size: 1.1rem;\r\n  font-weight: bolder;\r\n  height: 2.8rem;\r\n  padding: 0rem 0.8rem;\r\n  border: none;\r\n  border-radius: 1.5rem;\r\n\r\n  background-color: ${(props) => (props.active ? 'white' : THEME.MOBILE_HEADER)};\r\n  color: ${(props) => (props.active ? THEME.MOBILE_HEADER : 'white')};\r\n`;\r\n\r\nexport const SecondRowContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  @media only screen and (min-width: ${BREAKPOINT}px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileCategoryButton = styled.div<ActiveProps>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  width: 25%;\r\n  height: 4.5rem;\r\n  background-color: ${THEME.MOBILE_HEADER};\r\n\r\n  font-size: 1.5rem;\r\n  color: ${(props) => (props.active ? 'white' : '#FFB27A')};\r\n\r\n  font-weight: ${(props) => (props.active ? 'bold' : 'normal')};\r\n`;\r\n\r\nexport const DesktopHeaderLeft = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DesktopHeaderRight = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const DesktopCategoryContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DesktopGenderContainer = styled.div`\r\n  display: flex;\r\n  margin-left: 2.3rem;\r\n`;\r\n\r\nexport const DesktopGenderButton = styled.div<ActiveProps>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 100%;\r\n  padding: 0rem 0.5rem;\r\n\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n\r\n  color: ${(props) => (props.active ? 'black' : 'gray')};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const DesktopCategoryButton = styled.div<ActiveProps>`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  width: 5.84rem;\r\n  line-height: 6rem;\r\n  height: 6rem;\r\n  font-size: 1.5rem;\r\n\r\n  color: ${(props) => (props.active ? 'black' : 'gray')};\r\n  font-weight: bold;\r\n\r\n  margin: 0rem 2rem;\r\n  cursor: pointer;\r\n\r\n  /**이건 임시로.. 이렇게 하면 안됨 애니메이션 넣는게 맞음. */\r\n  border-bottom: ${(props) => (props.active ? `3px solid ${THEME.MOBILE_HEADER}` : '3px solid white')};\r\n`;\r\n\r\nexport const LoginButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  width: 3.3rem;\r\n  height: 6rem;\r\n\r\n  font-size: 1.1rem;\r\n  margin-right: 2rem;\r\n`;\r\n\r\nexport const DesktopSearchBar = styled.div`\r\n  width: 18rem;\r\n  height: 6rem;\r\n  padding: 0rem 1rem 0rem 1.4rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  border-left: 1px solid #edeff0;\r\n`;\r\n\r\nexport const DesktopSearchBarMessage = styled.div`\r\n  margin-left: 0.7rem;\r\n  font-size: 1.2rem;\r\n\r\n  color: gray;\r\n`;\r\n","import styled from \"styled-components/macro\";\r\nimport { THEME } from \"../../constant\";\r\n\r\nexport const searchLensSVG = styled.svg`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  fill: ${THEME.MOBILE_HEADER};\r\n  margin-left: 0.5rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nexport const SearchLens = () => {\r\n  return (\r\n    <S.searchLensSVG focusable=\"false\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path>\r\n    </S.searchLensSVG>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport * as S from './styles';\r\nimport { SearchLens } from '../../svgs/search-lens';\r\nimport { CATEGORIES } from '../../constant';\r\n\r\ninterface HeaderProps {}\r\n\r\nconst Header: React.FC<HeaderProps> = ({}) => {\r\n  const [genderState, setGenderState] = useState(true);\r\n  const [categoryState, setCategoryState] = useState(0);\r\n\r\n  const toggleButton = (genderState: boolean) => {\r\n    setGenderState(genderState);\r\n  };\r\n\r\n  const toggleCategory = (state: number) => {\r\n    setCategoryState(state);\r\n  };\r\n\r\n  return (\r\n    <S.Header>\r\n      <S.HeaderContainer>\r\n        <S.MobileContainer>\r\n          <S.Logo src={process.env.PUBLIC_URL + '/logo.png'} />\r\n          <S.MobileTopButtonsContainer>\r\n            <S.MobileGenderToggle>\r\n              <S.MobileGenderButton active={genderState} onClick={() => toggleButton(true)}>\r\n                WOMEN\r\n              </S.MobileGenderButton>\r\n              <S.MobileGenderButton active={!genderState} onClick={() => toggleButton(false)}>\r\n                MEN\r\n              </S.MobileGenderButton>\r\n            </S.MobileGenderToggle>\r\n            <S.MobileSearchBar>\r\n              <SearchLens />\r\n            </S.MobileSearchBar>\r\n          </S.MobileTopButtonsContainer>\r\n        </S.MobileContainer>\r\n        <S.SecondRowContainer>\r\n          {CATEGORIES.map((val, idx) => (\r\n            <S.MobileCategoryButton active={categoryState === idx} onClick={() => toggleCategory(idx)}>\r\n              {val}\r\n            </S.MobileCategoryButton>\r\n          ))}\r\n        </S.SecondRowContainer>\r\n        <S.DesktopContainer>\r\n          <S.DesktopHeaderLeft>\r\n            <S.Logo src={process.env.PUBLIC_URL + '/logo.png'} />\r\n            <S.DesktopGenderContainer>\r\n              <S.DesktopGenderButton active={genderState} onClick={() => toggleButton(true)}>\r\n                WOMEN\r\n              </S.DesktopGenderButton>\r\n              <S.DesktopGenderButton active={!genderState} onClick={() => toggleButton(false)}>\r\n                MEN\r\n              </S.DesktopGenderButton>\r\n            </S.DesktopGenderContainer>\r\n          </S.DesktopHeaderLeft>\r\n          <S.DesktopCategoryContainer>\r\n            {CATEGORIES.map((val, idx) => (\r\n              <S.DesktopCategoryButton active={categoryState === idx} onClick={() => toggleCategory(idx)}>\r\n                {val}\r\n              </S.DesktopCategoryButton>\r\n            ))}\r\n          </S.DesktopCategoryContainer>\r\n          <S.DesktopHeaderRight>\r\n            <S.LoginButton>로그인</S.LoginButton>\r\n            <S.DesktopSearchBar>\r\n              <SearchLens />\r\n              <S.DesktopSearchBarMessage>검색어를 입력하세요</S.DesktopSearchBarMessage>\r\n            </S.DesktopSearchBar>\r\n          </S.DesktopHeaderRight>\r\n        </S.DesktopContainer>\r\n      </S.HeaderContainer>\r\n    </S.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as S from './styles';\r\n\r\nimport React from 'react';\r\nimport Header from '../header';\r\n\r\ninterface LayoutProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <S.Layout>\r\n      <Header />\r\n      <S.LayoutContainer>{children}</S.LayoutContainer>\r\n    </S.Layout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport Layout from \"./component/layout\";\r\n\r\nfunction App() {\r\n  return <Layout>Content</Layout>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700;800&display=swap');\r\n  * {\r\n    font-family: 'Nanum Gothic', sans-serif;\r\n    font-display:'block';\r\n    box-sizing : border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  html {\r\n    font-size : 10px;\r\n  }\r\n  \r\n  body {\r\n    margin: 0;\r\n    user-select : none;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport GlobalStyle from \"./component/global-style\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}